{"ast":null,"code":"let initial_state = {\n  age: null,\n  gender: null,\n  weight: null,\n  height: null,\n  activity: null,\n  isDone: false\n};\n\nconst calculator = stats => {\n  let total = 0;\n  let fat, protein, carbs, pCal, fCal;\n  let wk = stats.weight;\n  let hc = stats.height;\n\n  if (stats.gender === \"female\") {\n    total = 655 + 9.6 * wk + 1.8 * hc - 4.7 * stats.age;\n  } else if (stats.gender === \"male\") {\n    total = 66 + 13.7 * wk + 5 * hc - 6.8 * stats.age;\n  }\n\n  if (stats.activity === \"Sedentary\") {\n    total = (total * 1.2).toFixed(2);\n  } else if (stats.activity === \"Light\") {\n    total = (total * 1.375).toFixed(2);\n  } else if (stats.activity === \"Moderate\") {\n    total = (total * 1.55).toFixed(2);\n  } else if (stats.activity === \"Very\") {\n    total = (total * 1.725).toFixed(2);\n  } else if (stats.activity === \"Extreme\") {\n    total = (total * 1.9).toFixed(2);\n  }\n\n  total = Number(total);\n  protein = (wk * 1.815).toFixed(2);\n  protein = Number(protein);\n  pCal = protein * 4;\n  fat = (total * 0.25 / 9).toFixed(2);\n  fat = Number(fat);\n  fCal = fat * 9;\n  carbs = (pCal + fCal) / 4;\n  carbs = Number(carbs);\n  const macros = {\n    calories: total,\n    protein,\n    fat,\n    carbs,\n    isDone: true\n  };\n  return macros;\n};\n\nconst macroChecker = (state = initial_state, action) => {\n  switch (action.type) {\n    case \"CREATE_MACROS\":\n      let a = calculator(action.payload);\n      return a;\n\n    default:\n      return state;\n  }\n};\n\nexport default macroChecker;","map":{"version":3,"sources":["/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/reducers/macroChecker.js"],"names":["initial_state","age","gender","weight","height","activity","isDone","calculator","stats","total","fat","protein","carbs","pCal","fCal","wk","hc","toFixed","Number","macros","calories","macroChecker","state","action","type","a","payload"],"mappings":"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","sourcesContent":["let initial_state = {\n  age: null,\n  gender: null,\n  weight: null,\n  height: null,\n  activity: null,\n  isDone: false\n};\nconst calculator = stats => {\n  let total = 0;\n  let fat, protein, carbs, pCal, fCal;\n  let wk = stats.weight;\n  let hc = stats.height;\n  if (stats.gender === \"female\") {\n    total = 655 + 9.6 * wk + 1.8 * hc - 4.7 * stats.age;\n  } else if (stats.gender === \"male\") {\n    total = 66 + 13.7 * wk + 5 * hc - 6.8 * stats.age;\n  }\n  if (stats.activity === \"Sedentary\") {\n    total = (total * 1.2).toFixed(2);\n  } else if (stats.activity === \"Light\") {\n    total = (total * 1.375).toFixed(2);\n  } else if (stats.activity === \"Moderate\") {\n    total = (total * 1.55).toFixed(2);\n  } else if (stats.activity === \"Very\") {\n    total = (total * 1.725).toFixed(2);\n  } else if (stats.activity === \"Extreme\") {\n    total = (total * 1.9).toFixed(2);\n  }\n  total = Number(total);\n  protein = (wk * 1.815).toFixed(2);\n  protein = Number(protein);\n  pCal = protein * 4;\n  fat = ((total * 0.25) / 9).toFixed(2);\n  fat = Number(fat);\n  fCal = fat * 9;\n  carbs = (pCal + fCal) / 4;\n  carbs = Number(carbs);\n  const macros = {\n    calories: total,\n    protein,\n    fat,\n    carbs,\n    isDone: true\n  };\n  return macros;\n};\nconst macroChecker = (state = initial_state, action) => {\n  switch (action.type) {\n    case \"CREATE_MACROS\":\n      let a = calculator(action.payload);\n      return a;\n\n    default:\n      return state;\n  }\n};\n\nexport default macroChecker;\n\n\n\n"]},"metadata":{},"sourceType":"module"}