{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/components/dashboard/formComp.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass FormComp extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return React.createElement(\"div\", {\n        className: \"ui error message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, error));\n    }\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    const required = value => value ? undefined : 'Required';\n\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui raised very padded text container segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Fill in the form\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form info-form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Weight in Kg\"), React.createElement(Field // component={this.renderInput}\n    , {\n      name: \"weight\",\n      component: \"input\",\n      type: \"number\",\n      placeholder: \"Enter weight..\",\n      validate: [required],\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Field //component={this.renderInput}\n    , {\n      name: \"age\",\n      component: \"input\",\n      type: \"number\",\n      placeholder: \"Enter age..\",\n      validate: [required],\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Height in Cm\"), React.createElement(Field // component={this.renderInput}\n    , {\n      name: \"height\",\n      component: \"input\",\n      placeholder: \"Enter height..\",\n      type: \"number\",\n      validate: [required],\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Activity Level\"), React.createElement(Field //component={this.renderInput}\n    , {\n      name: \"activity\",\n      component: \"select\",\n      placeholder: \"Select activity..\",\n      validate: [required],\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Sedentary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Sedentary\"), React.createElement(\"option\", {\n      value: \"Light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Lightly Active\"), React.createElement(\"option\", {\n      value: \"Moderate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Moderately Active\"), React.createElement(\"option\", {\n      value: \"Very\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Very Active\"), React.createElement(\"option\", {\n      value: \"Extreme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Extremely Active\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Select Gender\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Field //component={this.renderInput}\n    , {\n      className: \"ui radio checkbox\",\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"male\",\n      validate: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Male\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Field //component={this.renderInput}\n    , {\n      className: \"ui radio checkbox\",\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"female\",\n      validate: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Female\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttons submit huge left floated ui button\",\n      type: \"submit\",\n      disabled: submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      className: \"buttons negative huge right floated ui button\",\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Clear Values\"))))));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.weight) {\n    errors.title = 'You must enter your weight!';\n  }\n\n  if (!formValues.age) {\n    errors.description = 'You must enter your age!';\n  }\n\n  if (!formValues.height) {\n    errors.description = 'You must enter your height!';\n  }\n\n  if (!formValues.gender) {\n    errors.description = 'You must select your gender!';\n  }\n\n  if (!formValues.activity) {\n    errors.description = 'You must select your activity!';\n  }\n\n  return errors;\n};\n\nFormComp = reduxForm({\n  // a unique name for the form\n  form: \"contact\"\n})(FormComp);\nexport default FormComp;","map":{"version":3,"sources":["/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/components/dashboard/formComp.js"],"names":["React","Field","reduxForm","FormComp","Component","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","console","log","render","required","value","undefined","props","handleSubmit","pristine","reset","submitting","validate","errors","weight","title","age","description","height","gender","activity","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass FormComp extends React.Component {\n\n  renderError({ error, touched }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n\n  }\n  renderInput = ({ input, label, meta }) => {\n\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n    return (\n      <div className={className}>\n        <label>{label}</label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n  }\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    const required = value => value ? undefined : 'Required'\n    const { handleSubmit, pristine, reset, submitting } = this.props;\n    return (\n      <div className=\"form\">\n        <div className=\"ui raised very padded text container segment\">\n          <h2 className=\"ui header\">Fill in the form</h2>\n\n          <form\n            onSubmit={handleSubmit}\n            className=\"ui form info-form error\"\n          >\n\n            <div>\n\n              <div>\n                <label>Weight in Kg</label>\n                <Field\n                  // component={this.renderInput}\n                  name=\"weight\"\n                  component=\"input\"\n                  type=\"number\"\n                  placeholder=\"Enter weight..\"\n                  validate={[required]}\n                  className=\"required field\"\n                />\n              </div>\n\n              <div>\n                <label>Age</label>\n                <Field\n                  //component={this.renderInput}\n                  name=\"age\"\n                  component=\"input\"\n                  type=\"number\"\n                  placeholder=\"Enter age..\"\n                  validate={[required]}\n                  className=\"required field\"\n\n                />\n              </div>\n              <div>\n                <label>Height in Cm</label>\n                <Field\n                  // component={this.renderInput}\n                  name=\"height\"\n                  component=\"input\"\n                  placeholder=\"Enter height..\"\n                  type=\"number\"\n                  validate={[required]}\n                  className=\"required field\"\n\n                />\n              </div>\n              <div>\n                <label>Activity Level</label>\n                <Field\n                  //component={this.renderInput}\n                  name=\"activity\"\n                  component=\"select\"\n                  placeholder=\"Select activity..\"\n                  validate={[required]}\n                  className=\"required field\">\n                  <option />\n                  <option value=\"Sedentary\">Sedentary</option>\n                  <option value=\"Light\">Lightly Active</option>\n                  <option value=\"Moderate\">Moderately Active</option>\n                  <option value=\"Very\">Very Active</option>\n                  <option value=\"Extreme\">Extremely Active</option>\n                </Field>\n\n              </div>\n              <div >\n                <label>Select Gender</label>\n                <div >\n                  <label>\n                    <Field\n                      //component={this.renderInput}\n                      className=\"ui radio checkbox\"\n                      name=\"gender\"\n                      component=\"input\"\n                      type=\"radio\"\n                      value=\"male\"\n                      validate={[required]}\n                    /><label>\n                      Male</label>\n                  </label>\n                  <label>\n                    <Field\n                      //component={this.renderInput}\n                      className=\"ui radio checkbox\"\n                      name=\"gender\"\n                      component=\"input\"\n                      type=\"radio\"\n                      value=\"female\"\n                      validate={[required]}\n                    /><label>\n                      Female</label>\n                  </label>\n                </div>\n              </div>\n              <div >\n                <button className=\"buttons submit huge left floated ui button\"\n                  type=\"submit\"\n                  disabled={submitting}>\n                  Submit\n          </button>\n                <button className=\"buttons negative huge right floated ui button\"\n                  type=\"button\"\n                  disabled={pristine || submitting}\n                  onClick={reset}\n                >\n                  Clear Values\n          </button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.weight) {\n    errors.title = 'You must enter your weight!';\n  }\n  if (!formValues.age) {\n    errors.description = 'You must enter your age!';\n  }\n  if (!formValues.height) {\n    errors.description = 'You must enter your height!';\n  }\n  if (!formValues.gender) {\n    errors.description = 'You must select your gender!';\n  }\n  if (!formValues.activity) {\n    errors.description = 'You must select your activity!';\n  }\n  return errors;\n}\n\nFormComp = reduxForm({\n  // a unique name for the form\n  form: \"contact\"\n})(FormComp);\n\nexport default FormComp;\n"]},"metadata":{},"sourceType":"module"}