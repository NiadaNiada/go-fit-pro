{"ast":null,"code":"const recInput = (state = null, action) => {\n  if (action.type === 'FETCH_RECIPE') {\n    return action.payload.hits.map(ind => {\n      let _ind$recipe = ind.recipe,\n          calories = _ind$recipe.calories,\n          image = _ind$recipe.image,\n          shareAs = _ind$recipe.shareAs,\n          label = _ind$recipe.label;\n      let serving = ind.recipe.yield;\n      let _ind$recipe$totalNutr = ind.recipe.totalNutrients,\n          CHOCDF = _ind$recipe$totalNutr.CHOCDF,\n          FAT = _ind$recipe$totalNutr.FAT,\n          PROCNT = _ind$recipe$totalNutr.PROCNT;\n      return {\n        calories,\n        image,\n        shareAs,\n        CHOCDF,\n        FAT,\n        PROCNT,\n        serving,\n        label\n      };\n    });\n  } else {\n    return state;\n  }\n};\n\nexport default recInput;","map":{"version":3,"sources":["/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/reducers/recObject.js"],"names":["recInput","state","action","type","payload","hits","map","ind","recipe","calories","image","shareAs","label","serving","yield","totalNutrients","CHOCDF","FAT","PROCNT"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CAACC,KAAK,GAAG,IAAT,EAAeC,MAAf,KAA0B;AACvC,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAChC,WAAOD,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CAAyBC,GAAD,IAAS;AAAA,wBACMA,GAAG,CAACC,MADV;AAAA,UAC9BC,QAD8B,eAC9BA,QAD8B;AAAA,UACpBC,KADoB,eACpBA,KADoB;AAAA,UACbC,OADa,eACbA,OADa;AAAA,UACJC,KADI,eACJA,KADI;AAEpC,UAAIC,OAAO,GAAGN,GAAG,CAACC,MAAJ,CAAWM,KAAzB;AAFoC,kCAGNP,GAAG,CAACC,MAAJ,CAAWO,cAHL;AAAA,UAG9BC,MAH8B,yBAG9BA,MAH8B;AAAA,UAGtBC,GAHsB,yBAGtBA,GAHsB;AAAA,UAGjBC,MAHiB,yBAGjBA,MAHiB;AAIpC,aAAO;AACHT,QAAAA,QADG;AAEHC,QAAAA,KAFG;AAGHC,QAAAA,OAHG;AAIHK,QAAAA,MAJG;AAKHC,QAAAA,GALG;AAMHC,QAAAA,MANG;AAOHL,QAAAA,OAPG;AAQHD,QAAAA;AARG,OAAP;AAUH,KAdM,CAAP;AAeH,GAhBD,MAgBO;AACH,WAAOX,KAAP;AACH;AACJ,CApBD;;AAsBA,eAAeD,QAAf","sourcesContent":["const recInput = (state = null, action) => {\n    if (action.type === 'FETCH_RECIPE') {\n        return action.payload.hits.map((ind) => {\n            let { calories, image, shareAs, label } = ind.recipe;\n            let serving = ind.recipe.yield\n            let { CHOCDF, FAT, PROCNT } = ind.recipe.totalNutrients;\n            return {\n                calories,\n                image,\n                shareAs,\n                CHOCDF,\n                FAT,\n                PROCNT,\n                serving,\n                label\n            }\n        })\n    } else {\n        return state;\n    }\n}\n\nexport default recInput;"]},"metadata":{},"sourceType":"module"}