{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/components/recipes/RecipeGenerator.js\";\nimport React from \"react\";\nimport { fetchRecipe } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Spinner\";\n\nclass RecipeGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.display = () => {\n      console.log(this.props.recObject[0].PROCNT);\n    };\n\n    this.recipeCardGenerator = () => {\n      return this.props.recObject.map(ind => {\n        try {\n          let calories = (ind.calories / ind.serving).toFixed(2);\n          let protein = (ind.PROCNT.quantity / ind.serving).toFixed(2);\n          let carbs = (ind.CHOCDF.quantity / ind.serving).toFixed(2);\n          let fats = (ind.FAT.quantity / ind.serving).toFixed(2);\n          return React.createElement(\"div\", {\n            className: \"recipeCard\",\n            key: ind.label,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: ind.shareAs,\n            rel: \"noopener noreferrer\",\n            target: \"_blank\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"recipeImg\",\n            style: {\n              background: `url('${ind.image}') no-repeat center center`\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"recipeInfo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, ind.label), React.createElement(\"div\", {\n            className: \"metaRecInfo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"Calories: \", calories), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, \"Protein: \", protein), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, \"Carbs: \", carbs), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"Fats: \", fats), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"Serves: \", ind.serving))));\n        } catch {\n          return console.log(\"Error \");\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui inverted segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  }\n\n  componentDidMount() {\n    this.props.fetchRecipe(\"\");\n  }\n\n  render() {\n    if (!this.props.recObject) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"recipeCardContain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.recipeCardGenerator());\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recObject: state.recObject,\n    recInput: state.recInput\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchRecipe\n})(RecipeGenerator);","map":{"version":3,"sources":["/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/components/recipes/RecipeGenerator.js"],"names":["React","fetchRecipe","connect","Spinner","RecipeGenerator","Component","display","console","log","props","recObject","PROCNT","recipeCardGenerator","map","ind","calories","serving","toFixed","protein","quantity","carbs","CHOCDF","fats","FAT","label","shareAs","background","image","render","componentDidMount","mapStateToProps","state","recInput"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { fetchRecipe } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../Spinner\";\n\nclass RecipeGenerator extends React.Component {\n  render() {\n    return (\n      <div className=\"ui inverted segment\">\n        <Spinner />\n      </div>\n    );\n  }\n  componentDidMount() {\n    this.props.fetchRecipe(\"\");\n  }\n  display = () => {\n    console.log(this.props.recObject[0].PROCNT);\n  };\n\n  recipeCardGenerator = () => {\n    return this.props.recObject.map(ind => {\n      try {\n        let calories = (ind.calories / ind.serving).toFixed(2);\n        let protein = (ind.PROCNT.quantity / ind.serving).toFixed(2);\n        let carbs = (ind.CHOCDF.quantity / ind.serving).toFixed(2);\n        let fats = (ind.FAT.quantity / ind.serving).toFixed(2);\n        return (\n          <div className=\"recipeCard\" key={ind.label}>\n            <a href={ind.shareAs} rel=\"noopener noreferrer\" target=\"_blank\">\n              <div className=\"recipeImg\" style={{ background: `url('${ind.image}') no-repeat center center` }} />\n            </a>\n            <div className=\"recipeInfo\">\n              <h2>{ind.label}</h2>\n              <div className=\"metaRecInfo\">\n                <h5>Calories: {calories}</h5>\n                <h5>Protein: {protein}</h5>\n                <h5>Carbs: {carbs}</h5>\n                <h5>Fats: {fats}</h5>\n                <h5>Serves: {ind.serving}</h5>\n              </div>\n            </div>\n          </div>\n        );\n      } catch {\n        return console.log(\"Error \");\n      }\n    });\n  };\n  render() {\n    if (!this.props.recObject) {\n      return (\n        <Spinner />\n      );\n\n    } else {\n      return (\n        <div className=\"recipeCardContain\">{this.recipeCardGenerator()}</div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    recObject: state.recObject,\n    recInput: state.recInput\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchRecipe\n  }\n)(RecipeGenerator);\n"]},"metadata":{},"sourceType":"module"}