{"ast":null,"code":"var _jsxFileName = \"/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/components/dashboard/formComp.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass FormComp extends React.Component {\n  render() {\n    //const required = value => value ? undefined : 'Required'\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          reset = _this$props.reset,\n          submitting = _this$props.submitting;\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui raised very padded text container segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"ui header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Fill in the form\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form info-form error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Weight in Kg\"), React.createElement(Field, {\n      component: renderField,\n      name: \"weight\" //component=\"input\"\n      ,\n      type: \"number\",\n      placeholder: \"Enter weight..\" //validate={[required]}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Field, {\n      component: renderField,\n      name: \"age\" //component=\"input\"\n      ,\n      type: \"number\",\n      placeholder: \"Enter age..\" // validate={[required]}\n      ,\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Height in Cm\"), React.createElement(Field, {\n      component: renderField,\n      name: \"height\" //component=\"input\"\n      ,\n      placeholder: \"Enter height..\",\n      type: \"number\" //validate={[required]}\n      ,\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Activity Level\"), React.createElement(Field, {\n      component: renderField,\n      name: \"activity\",\n      component: \"select\",\n      placeholder: \"Select activity..\" //validate={[required]}\n      ,\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Sedentary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Sedentary\"), React.createElement(\"option\", {\n      value: \"Light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Lightly Active\"), React.createElement(\"option\", {\n      value: \"Moderate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Moderately Active\"), React.createElement(\"option\", {\n      value: \"Very\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Very Active\"), React.createElement(\"option\", {\n      value: \"Extreme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Extremely Active\"))), React.createElement(\"div\", {\n      className: \"required field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Select Gender\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Field //component={this.renderInput}\n    , {\n      className: \"ui radio checkbox\",\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"male\" //validate={[required]}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \"Male\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Field, {\n      component: renderField // className=\"ui radio checkbox\"\n      ,\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"female\" // validate={[required]}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"Female\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttons submit huge left floated ui button\",\n      type: \"submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      className: \"buttons negative huge right floated ui button\",\n      type: \"button\",\n      disabled: pristine || submitting,\n      onClick: reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Clear Values\"))))));\n  }\n\n}\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  className: \"control-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  className: \"form-control\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, warning))));\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.weight) {\n    errors.weight = 'You must enter your weight!';\n  }\n\n  if (!formValues.age) {\n    errors.age = 'You must enter your age!';\n  }\n\n  if (!formValues.height) {\n    errors.height = 'You must enter your height!';\n  }\n\n  if (!formValues.gender) {\n    errors.gender = 'You must select your gender!';\n  }\n\n  if (!formValues.activity) {\n    errors.activity = 'You must select your activity!';\n  }\n\n  return errors;\n};\n\nFormComp = reduxForm({\n  // a unique name for the form\n  form: \"contact\",\n  validate\n})(FormComp);\nexport default FormComp;","map":{"version":3,"sources":["/Users/diana/Desktop/Udemy JS Course/go-fit-pro/src/components/dashboard/formComp.js"],"names":["React","Field","reduxForm","FormComp","Component","render","props","handleSubmit","pristine","reset","submitting","renderField","input","label","type","meta","touched","error","warning","validate","formValues","errors","weight","age","height","gender","activity","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAGA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAErCC,EAAAA,MAAM,GAAG;AACP;AADO,wBAE+C,KAAKC,KAFpD;AAAA,UAECC,YAFD,eAECA,YAFD;AAAA,UAEeC,QAFf,eAEeA,QAFf;AAAA,UAEyBC,KAFzB,eAEyBA,KAFzB;AAAA,UAEgCC,UAFhC,eAEgCA,UAFhC;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAGE;AACE,MAAA,QAAQ,EAAEH,YADZ;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEI,WADb;AAEE,MAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,WAAW,EAAC,gBALd,CAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAcE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEA,WADb;AAEE,MAAA,IAAI,EAAC,KAFP,CAGE;AAHF;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,WAAW,EAAC,aALd,CAME;AANF;AAOE,MAAA,SAAS,EAAC,gBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,EA2BE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEA,WADb;AAEE,MAAA,IAAI,EAAC,QAFP,CAGE;AAHF;AAIE,MAAA,WAAW,EAAC,gBAJd;AAKE,MAAA,IAAI,EAAC,QALP,CAME;AANF;AAOE,MAAA,SAAS,EAAC,gBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA3BF,EAwCE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEA,WADb;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,WAAW,EAAC,mBAJd,CAKE;AALF;AAME,MAAA,SAAS,EAAC,gBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,EASE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,EAUE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,EAWE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF,EAYE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAZF,CAFF,CAxCF,EA2DE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CACE;AADF;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,OAJZ;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAC,MANR,CAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,SADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEA,WADb,CAEE;AAFF;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,OAJZ;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAC,QANR,CAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,WAbF,CAFF,CA3DF,EAwFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,4CAAlB;AACE,MAAA,IAAI,EAAC,QADP;AACgB,MAAA,QAAQ,EAAEH,QAAQ,IAAIE,UADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE;AAAQ,MAAA,SAAS,EAAC,+CAAlB;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAEF,QAAQ,IAAIE,UAFxB;AAGE,MAAA,OAAO,EAAED,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CAxFF,CALF,CAHF,CADF,CADF;AAmHD;;AAxHoC;;AA2HvC,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB;AAA5B,CAAD,KAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAO,EAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAkCL,KAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,+CAAWD,KAAX;AAAkB,EAAA,WAAW,EAAEC,KAA/B;AAAsC,EAAA,IAAI,EAAEC,IAA5C;AAAkD,EAAA,SAAS,EAAC,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,EAEGE,OAAO,KAAMC,KAAK,IAAI;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BA,KAA/B,CAAV,IAA4DC,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,OAAP,CAA5E,CAFV,CAFF,CADF;;AAUA,MAAMC,QAAQ,GAAGC,UAAU,IAAI;AAC7B,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACD,UAAU,CAACE,MAAhB,EAAwB;AACtBD,IAAAA,MAAM,CAACC,MAAP,GAAgB,6BAAhB;AACD;;AACD,MAAI,CAACF,UAAU,CAACG,GAAhB,EAAqB;AACnBF,IAAAA,MAAM,CAACE,GAAP,GAAa,0BAAb;AACD;;AACD,MAAI,CAACH,UAAU,CAACI,MAAhB,EAAwB;AACtBH,IAAAA,MAAM,CAACG,MAAP,GAAgB,6BAAhB;AACD;;AACD,MAAI,CAACJ,UAAU,CAACK,MAAhB,EAAwB;AACtBJ,IAAAA,MAAM,CAACI,MAAP,GAAgB,8BAAhB;AACD;;AACD,MAAI,CAACL,UAAU,CAACM,QAAhB,EAA0B;AACxBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,gCAAlB;AACD;;AACD,SAAOL,MAAP;AACD,CAnBD;;AAqBAlB,QAAQ,GAAGD,SAAS,CAAC;AACnB;AACAyB,EAAAA,IAAI,EAAE,SAFa;AAGnBR,EAAAA;AAHmB,CAAD,CAAT,CAIRhB,QAJQ,CAAX;AAMA,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\n\nclass FormComp extends React.Component {\n\n  render() {\n    //const required = value => value ? undefined : 'Required'\n    const { handleSubmit, pristine, reset, submitting } = this.props;\n    return (\n      <div className=\"form\">\n        <div className=\"ui raised very padded text container segment\">\n          <h2 className=\"ui header\">Fill in the form</h2>\n\n          <form\n            onSubmit={handleSubmit}\n            className=\"ui form info-form error\"\n          >\n\n            <div>\n\n              <div className=\"required field\">\n                <label>Weight in Kg</label>\n                <Field\n                  component={renderField}\n                  name=\"weight\"\n                  //component=\"input\"\n                  type=\"number\"\n                  placeholder=\"Enter weight..\"\n                //validate={[required]}\n                />\n              </div>\n\n              <div className=\"required field\">\n                <label>Age</label>\n                <Field\n                  component={renderField}\n                  name=\"age\"\n                  //component=\"input\"\n                  type=\"number\"\n                  placeholder=\"Enter age..\"\n                  // validate={[required]}\n                  className=\"required field\"\n\n                />\n              </div>\n              <div className=\"required field\">\n                <label>Height in Cm</label>\n                <Field\n                  component={renderField}\n                  name=\"height\"\n                  //component=\"input\"\n                  placeholder=\"Enter height..\"\n                  type=\"number\"\n                  //validate={[required]}\n                  className=\"required field\"\n\n                />\n              </div>\n              <div className=\"required field\">\n                <label>Activity Level</label>\n                <Field\n                  component={renderField}\n                  name=\"activity\"\n                  component=\"select\"\n                  placeholder=\"Select activity..\"\n                  //validate={[required]}\n                  className=\"required field\">\n                  <option />\n                  <option value=\"Sedentary\">Sedentary</option>\n                  <option value=\"Light\">Lightly Active</option>\n                  <option value=\"Moderate\">Moderately Active</option>\n                  <option value=\"Very\">Very Active</option>\n                  <option value=\"Extreme\">Extremely Active</option>\n                </Field>\n\n              </div>\n\n              <div className=\"required field\">\n                <label>Select Gender</label>\n                <div >\n                  <label>\n                    <Field\n                      //component={this.renderInput}\n                      className=\"ui radio checkbox\"\n                      name=\"gender\"\n                      component=\"input\"\n                      type=\"radio\"\n                      value=\"male\"\n                    //validate={[required]}\n                    />\n                    Male</label>\n\n                  <label>\n                    <Field\n                      component={renderField}\n                      // className=\"ui radio checkbox\"\n                      name=\"gender\"\n                      component=\"input\"\n                      type=\"radio\"\n                      value=\"female\"\n                    // validate={[required]}\n                    />\n                    Female</label>\n\n                </div>\n              </div>\n              <div >\n                <button className=\"buttons submit huge left floated ui button\"\n                  type=\"submit\" disabled={pristine || submitting}>Submit</button>\n                <button className=\"buttons negative huge right floated ui button\"\n                  type=\"button\"\n                  disabled={pristine || submitting}\n                  onClick={reset}\n                >\n                  Clear Values\n          </button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div>\n    <label className=\"control-label\">{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type} className=\"form-control\" />\n      {touched && ((error && <span className=\"text-danger\">{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.weight) {\n    errors.weight = 'You must enter your weight!';\n  }\n  if (!formValues.age) {\n    errors.age = 'You must enter your age!';\n  }\n  if (!formValues.height) {\n    errors.height = 'You must enter your height!';\n  }\n  if (!formValues.gender) {\n    errors.gender = 'You must select your gender!';\n  }\n  if (!formValues.activity) {\n    errors.activity = 'You must select your activity!';\n  }\n  return errors;\n}\n\nFormComp = reduxForm({\n  // a unique name for the form\n  form: \"contact\",\n  validate\n})(FormComp);\n\nexport default FormComp;\n"]},"metadata":{},"sourceType":"module"}